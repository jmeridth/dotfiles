#!/bin/bash

# kubernetes
alias k="kubectl"
alias kshell="~/code/dotfiles/bin/kshell"
alias kexec='(){kubectl exec --stdin --tty "$1" -- /bin/bash}'
alias kconf="vim ~/.kube/config"
alias kcheat="open https://kubernetes.io/docs/reference/kubectl/cheatsheet/"
alias kn="kubens"
alias kc="kubectx"
alias debug="kubectl run -i --tty --rm debug --image=ubuntu:latest --restart=Never -- /bin/bash"
alias debugalpine="kubectl run -i --tty --rm debug --image=alpine:3.7 --restart=Never -- /bin/sh"

# gh
alias ghp="gh pr list --web --repo $1"
alias ghpulls='(){gh pr list --repo "$1" --author "$2" --web}'
alias ghi='(){gh issue list --web --repo "$1"}'
alias ghissues='(){gh issue list --web --repo "$1" -a "$2"}'
alias myprs="gh pr list --web -A jmeridth"
alias allmyprs="gh pr list --web -a jmeridth -A jmeridth"
alias myissues="gh issue list --web -A jmeridth"
alias allmyissues="gh issue list --web -a jmeridth -A jmeridth"

# localenv
alias localenv='(){@export $(cat .env | xargs) }'

# ffmpeg
alias codec='(){ffprobe -v error -select_streams v:0 -show_entries stream=codec_name -of default=noprint_wrappers=1:nokey=1 "$1"}'

# aws
alias awsprofiles='export AWS_PROFILE=$(sed -n "s/\[profile \(.*\)\]/\1/gp" ~/.aws/config | fzf)'
alias awslogin='awsprofiles && aws sso login'

# postgres
alias pgtest='(){ docker exec -it "$1" /usr/bin/perl /usr/bin/psql -U postgres }'

# aws
alias awssso="aws configure sso"

# terraform/terragrunt
alias tf="terraform"
alias tg="terragrunt"
alias tgraph="terraform graph | dot -Tsvg > graph.svg"

# tmux
alias tn="tmux -S /tmp/pair"
alias to="tmux -S /tmp/pair a"
alias mux="tmuxinator"

# clean
alias killdsstore="find . -name '.DS_Store' -type f -delete"

# blog
alias blog="cd ~/code/jmeridth.github.io"

# docker
alias px='(){docker exec -it "$1" /bin/bash}'
alias ddebug='(){docker run -it --rm --name debug $1 /bin/sh }'
alias dockerdebugalpine="docker run -it --rm --name debug alpine:3.7 /bin/sh"
alias dockerdebugubuntu="docker run -it --rm --name debug ubuntu:latest /bin/sh"
alias did="docker images --quiet --filter 'dangling=true' | xargs docker rmi"
alias dsp="docker system prune -af"
alias dkc="docker ps -aq | xargs docker rm -f"
alias dkui="docker rmi $(docker images | grep '^<none>' | awk '{print $3}')"
alias dki="docker images -aq | xargs docker rmi -f"
alias dkv="docker volume ls -qf dangling=true | xargs docker volume rm"
alias dka="dkc;dki;dkv;dsp"
alias osxdocker="docker run -it --rm --privileged --pid=host justincormack/nsenter1"

# fix external display detection
alias getautorandr="sudo wget https://raw.githubusercontent.com/wertarbyte/autorandr/master/autorandr -O /usr/bin/autorandr && sudo chmod +x /usr/bin/autorandr"
alias fixdisplays="getautorandr && autorandr --change"

# mysql
alias mysqlstop="sudo systemctl stop mysql"
alias mysqlstart="sudo systemctl start mysql"

# APT-GET
alias update="sudo apt update && sudo apt upgrade -y && sudo apt dist-upgrade -y && sudo apt autoclean -y && sudo apt autoremove -y"

# config files
alias vimrc="vim ~/.vimrc"
alias zshrc="vim ~/.zshrc"
alias aliases="vim ~/.aliases"

# cli usage
alias ..="cd .."
alias senv="source ~/.zshrc && cd ."

# cd helpers
alias dotfiles="cd ~/code/dotfiles"

# ag
alias agsearch='(){ag --$1 -i $2 . }'
alias agp='agsearch "py" $1'
alias agr='agsearch "rb" $1'

# gpg
alias gpgreset='gpgconf --kill gpg-agent && gpg --card-status'
alias jmencrypt='(){gpg --output "$1".gpg --encrypt --recipient jmeridth@gmail.com "$1"}'
alias jmdecrypt='(){gpg --output "$1" --decrypt "$1".gpg}'
alias jmtest='(){echo "$1".gpg}'

# json
alias json="python -m json.tool"

# python
alias pyclean="find . -name '*.pyc' -delete"
alias pyinit="touch __init__.py"
alias py="ptpython"
alias cvenv="python3 -m venv venv"
alias avenv="source venv/bin/activate"

# tar
alias tardir='tar -czvf "$1"'
alias untarzippeddir='tar -xzvf "$1" "$2"'
alias untardir='tar -xvf "$1"'

# ls
alias l='ls -lah --color'

# intellij (on osx)
alias intellij='open -a IntelliJ\ IDEA ./'

# grc overides for ls
#   Made possible through contributions from generous benefactors like
#   `brew install coreutils`
if $(gls &>/dev/null)
then
  alias l="gls -lAh --color"
  alias ll="gls -l --color"
  alias la='gls -A --color'
fi

if [[ "$OSTYPE" == "darwin"* ]]; then
  if [[ -a $HOME/.aliases.osx ]] ; then source $HOME/.aliases.osx ; fi
fi

if [[ "$OSTYPE" == "linux"* ]]; then
  if [[ -a $HOME/.aliases.linux ]] ; then source $HOME/.aliases.linux ; fi
fi
